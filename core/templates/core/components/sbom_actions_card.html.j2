{% comment %}
SBOM Actions Card Component - Django Template
Replaces the Vue SbomActionsCard component

Context variables:
- sbom: SBOM object
- component: Component object
- has_crud_permissions: Boolean for CRUD permissions
{% endcomment %}
{% load static %}

<!-- Using standard card styling patterns manually for SBOM actions -->
<div class="standard-card">
    <div class="card shadow-brand border-0">
        <!-- Card Header -->
        <div class="card-header px-4 py-3">
            <div class="d-flex justify-content-between align-items-center w-100">
                <h4 class="card-title mb-0">
                    <i class="fas fa-tools me-2 text-primary"></i>
                    Actions
                </h4>
            </div>
        </div>

        <!-- Card Body -->
        <div class="card-body p-4">
            {% if sbom %}
                <div class="actions-content">
                    <!-- Download SBOM -->
                    <div class="action-item mb-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="action-info">
                                <div class="action-title">
                                    <i class="fas fa-download me-2 text-success"></i>
                                    <strong>Download SBOM</strong>
                                </div>
                                <div class="action-description text-muted small">
                                    Download the original SBOM file
                                </div>
                            </div>
                            <a href="/api/v1/sboms/{{ sbom.id }}/download"
                               class="btn btn-sm btn-outline-success"
                               target="_blank"
                               rel="noopener">
                                <i class="fas fa-download me-1"></i>Download
                            </a>
                        </div>
                    </div>

                    <!-- View in SBOM Browser -->
                    <div class="action-item mb-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="action-info">
                                <div class="action-title">
                                    <i class="fas fa-search me-2 text-info"></i>
                                    <strong>Browse SBOM</strong>
                                </div>
                                <div class="action-description text-muted small">
                                    Explore components and dependencies
                                </div>
                            </div>
                            <a href="/sbom/{{ sbom.id }}/"
                               class="btn btn-sm btn-outline-info">
                                <i class="fas fa-eye me-1"></i>Browse
                            </a>
                        </div>
                    </div>

                    <!-- View Vulnerabilities -->
                    <div class="action-item mb-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="action-info">
                                <div class="action-title">
                                    <i class="fas fa-shield-alt me-2 text-warning"></i>
                                    <strong>View Vulnerabilities</strong>
                                </div>
                                <div class="action-description text-muted small">
                                    Check for security vulnerabilities
                                </div>
                            </div>
                            <a href="/sbom/{{ sbom.id }}/vulnerabilities/"
                               class="btn btn-sm btn-outline-warning">
                                <i class="fas fa-bug me-1"></i>Vulnerabilities
                            </a>
                        </div>
                    </div>

                    {% if has_crud_permissions %}
                        <!-- Separator -->
                        <hr class="my-4">

                        <!-- Delete SBOM -->
                        <div class="action-item">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="action-info">
                                    <div class="action-title">
                                        <i class="fas fa-trash-alt me-2 text-danger"></i>
                                        <strong>Delete SBOM</strong>
                                    </div>
                                    <div class="action-description text-muted small">
                                        Permanently remove this SBOM
                                    </div>
                                </div>
                                <button class="btn btn-sm btn-outline-danger delete-sbom-btn"
                                        data-sbom-id="{{ sbom.id }}"
                                        data-sbom-name="{{ sbom.name }}"
                                        data-component-id="{{ component.id }}">
                                    <i class="fas fa-trash-alt me-1"></i>Delete
                                </button>
                            </div>
                        </div>
                    {% endif %}
                </div>
            {% else %}
                <div class="text-center text-muted py-4">
                    <i class="fas fa-info-circle me-2"></i>
                    No SBOM available for this component.
                </div>
            {% endif %}
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteSbomModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modern-modal">
            <div class="modal-header modern-modal-header border-0">
                <h5 class="modal-title fw-bold">
                    <i class="fas fa-exclamation-triangle text-danger me-2"></i>
                    Delete SBOM
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body px-4 py-3">
                <p class="mb-3">Are you sure you want to delete this SBOM?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Warning:</strong> This action cannot be undone. All associated vulnerability data will also be removed.
                </div>
                <p class="text-muted small mb-0">
                    SBOM: <span id="deleteSbomName" class="fw-medium"></span>
                </p>
            </div>
            <div class="modal-footer modern-modal-footer border-0 px-4 py-3">
                <button type="button" class="btn modern-btn-secondary" data-bs-dismiss="modal">
                    Cancel
                </button>
                <button type="button" class="btn modern-btn-danger" id="confirmDeleteSbom">
                    <i class="fas fa-trash-alt me-2"></i>Delete SBOM
                </button>
            </div>
        </div>
    </div>
</div>

<style>
.action-item {
    padding: 1rem 0;
    border-bottom: 1px solid #f1f5f9;
}

.action-item:last-child {
    border-bottom: none;
    padding-bottom: 0;
}

.action-title {
    font-size: 0.9rem;
    font-weight: 600;
    color: #374151;
    margin-bottom: 0.25rem;
}

.action-description {
    font-size: 0.8rem;
    color: #6b7280;
    margin-bottom: 0;
}

.action-info {
    flex: 1;
    margin-right: 1rem;
}

@media (max-width: 768px) {
    .action-item {
        padding: 0.75rem 0;
    }

    .d-flex {
        flex-direction: column;
        align-items: flex-start !important;
        gap: 0.5rem;
    }

    .action-info {
        margin-right: 0;
        margin-bottom: 0.5rem;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const deleteButtons = document.querySelectorAll('.delete-sbom-btn');
    const deleteModal = document.getElementById('deleteSbomModal');
    const deleteSbomName = document.getElementById('deleteSbomName');
    const confirmDeleteBtn = document.getElementById('confirmDeleteSbom');

    let currentSbomId = null;
    let currentComponentId = null;

    // Handle delete button clicks
    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            currentSbomId = this.dataset.sbomId;
            currentComponentId = this.dataset.componentId;
            const sbomName = this.dataset.sbomName;

            if (deleteSbomName) {
                deleteSbomName.textContent = sbomName;
            }

            if (deleteModal) {
                const modal = new bootstrap.Modal(deleteModal);
                modal.show();
            }
        });
    });

    // Handle confirm delete
    if (confirmDeleteBtn) {
        confirmDeleteBtn.addEventListener('click', async function() {
            if (!currentSbomId) return;

            // Show loading state
            const originalHTML = this.innerHTML;
            this.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Deleting...';
            this.disabled = true;

            try {
                const response = await fetch(`/api/v1/sboms/${currentSbomId}/`, {
                    method: 'DELETE',
                    headers: {
                        'X-CSRFToken': getCsrfToken(),
                        'Content-Type': 'application/json'
                    }
                });

                if (response.ok) {
                    if (window.showSuccess) {
                        window.showSuccess('SBOM deleted successfully');
                    }

                    // Hide modal
                    const modal = bootstrap.Modal.getInstance(deleteModal);
                    if (modal) {
                        modal.hide();
                    }

                    // Redirect to component page after short delay
                    setTimeout(() => {
                        window.location.href = `/component/${currentComponentId}/`;
                    }, 1000);
                } else {
                    const errorData = await response.json();
                    if (window.showError) {
                        window.showError(errorData.detail || 'Failed to delete SBOM');
                    } else {
                        alert('Failed to delete SBOM');
                    }
                }
            } catch (error) {
                console.error('Delete error:', error);
                if (window.showError) {
                    window.showError('Network error occurred. Please try again.');
                } else {
                    alert('Network error occurred. Please try again.');
                }
            } finally {
                // Restore button state
                this.innerHTML = originalHTML;
                this.disabled = false;
            }
        });
    }

    // Get CSRF token
    function getCsrfToken() {
        const cookieValue = document.cookie
            .split('; ')
            .find(row => row.startsWith('csrftoken='))
            ?.split('=')[1];

        if (cookieValue) return cookieValue;

        const metaTag = document.querySelector('meta[name="csrf-token"]');
        return metaTag?.content || '';
    }
});
</script>
