{% extends "core/dashboard_base.html.j2" %}
{% comment %}
Template context:
product: Product object
releases: QuerySet of Release objects
has_crud_permissions: Boolean indicating if user has CRUD permissions
APP_BASE_URL: Base URL for the application (for AJAX requests)
current_team: Current team session data
{% endcomment %}
{% load widget_tweaks %}
{% load static %}
{% load django_vite %}
{% block title %}sbomify Product: {{ product.name }} - Releases{% endblock %}
{% block content %}
    <div class="page-header mb-4">
        <div class="header-main mb-3">
            <div class="title-section">
                <div class="breadcrumb-nav">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a href="{% url 'core:product_details' product.id %}">{{ product.name }}</a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">Releases</li>
                        </ol>
                    </nav>
                </div>
                <h1 class="item-title">Releases</h1>
                <p class="item-subtitle">Manage releases for {{ product.name }}</p>
            </div>
            {% if has_crud_permissions %}
                <div class="header-actions">
                    <button class="btn btn-primary"
                            data-bs-toggle="modal"
                            data-bs-target="#createReleaseModal">
                        <i class="fas fa-plus me-2"></i>Create Release
                    </button>
                </div>
            {% endif %}
        </div>
        <div class="header-meta">
            <span class="meta-item">
                <i class="fas fa-tag me-2 text-primary"></i>
                <span class="meta-label">{{ releases|length }} Release{{ releases|length|pluralize }}</span>
            </span>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            {% include "core/components/releases_table.html.j2" with releases=releases product_id=product.id has_crud_permissions=has_crud_permissions table_title="Releases" show_actions=True %}
        </div>
    </div>
    {% if has_crud_permissions %}
        <!-- Create Release Modal -->
        <div class="modal fade"
             id="createReleaseModal"
             tabindex="-1"
             aria-labelledby="createReleaseModalLabel"
             aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="createReleaseModalLabel">Create New Release</h5>
                        <button type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="createReleaseForm">
                            <div class="mb-3">
                                <label for="releaseName" class="form-label">Release Name</label>
                                <input type="text"
                                       class="form-control"
                                       id="releaseName"
                                       name="name"
                                       required
                                       placeholder="e.g., v1.0.0, 2024.1, beta-3">
                                <div class="form-text">Enter a unique name for this release</div>
                            </div>
                            <div class="mb-3">
                                <label for="releaseDescription" class="form-label">Description (Optional)</label>
                                <textarea class="form-control"
                                          id="releaseDescription"
                                          name="description"
                                          rows="3"
                                          placeholder="Describe what's included in this release..."></textarea>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input"
                                       type="checkbox"
                                       id="releaseIsPrerelease"
                                       name="is_prerelease">
                                <label class="form-check-label" for="releaseIsPrerelease">Mark as pre-release</label>
                                <div class="form-text">Pre-releases are typically alpha, beta, or release candidate versions</div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="createReleaseBtn">Create Release</button>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}
    <style>
        .page-header {
            background: linear-gradient(135deg, #ffffff, #f8fafc);
            border: 1px solid #e2e8f0;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .header-main {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            border-bottom: 1px solid #e2e8f0;
            padding-bottom: 1.5rem;
        }

        .title-section {
            flex: 1;
        }

        .breadcrumb {
            background: none;
            padding: 0;
            margin: 0 0 1rem 0;
            font-size: 0.9rem;
        }

        .breadcrumb-item a {
            color: #6366f1;
            text-decoration: none;
        }

        .breadcrumb-item a:hover {
            text-decoration: underline;
        }

        .item-title {
            font-size: 2rem;
            font-weight: 700;
            color: #1a202c;
            margin: 0;
            line-height: 1.2;
        }

        .item-subtitle {
            color: #64748b;
            font-size: 1.1rem;
            margin: 0.5rem 0 0 0;
        }

        .header-actions {
            flex-shrink: 0;
            margin-left: 2rem;
        }

        .header-meta {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding-top: 1rem;
        }

        .meta-item {
            display: flex;
            align-items: center;
            font-size: 0.875rem;
            color: #64748b;
        }

        .meta-label {
            font-weight: 600;
        }

        .btn-primary {
            background: linear-gradient(135deg, #6366f1, #4f46e5);
            border: none;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            box-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);
            transition: all 0.2s ease;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #4f46e5, #4338ca);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);
        }

        .modal-content {
            border: none;
            border-radius: 12px;
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }

        .modal-header {
            border-bottom: 1px solid #e2e8f0;
            padding: 1.5rem;
        }

        .modal-title {
            font-weight: 600;
            color: #1a202c;
        }

        .modal-body {
            padding: 1.5rem;
        }

        .form-control {
            border-radius: 8px;
            border: 1px solid #d1d5db;
            padding: 0.75rem 1rem;
            transition: all 0.2s ease;
        }

        .form-control:focus {
            border-color: #6366f1;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
        }

        .form-label {
            font-weight: 600;
            color: #374151;
            margin-bottom: 0.5rem;
        }

        .form-text {
            color: #6b7280;
            font-size: 0.875rem;
        }

        @media (max-width: 768px) {
            .header-main {
                flex-direction: column;
                gap: 1.5rem;
                align-items: stretch;
            }

            .header-actions {
                margin-left: 0;
            }

            .item-title {
                font-size: 1.5rem;
            }
        }
    </style>
{% endblock %}
{% block scripts %}
    <!-- No Vue components needed anymore -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            {% if has_crud_permissions %}
                // Handle create/edit release form submission
                const createReleaseBtn = document.getElementById('createReleaseBtn');
                const createReleaseForm = document.getElementById('createReleaseForm');
                const modal = document.getElementById('createReleaseModal');

                if (createReleaseBtn && createReleaseForm) {
                    createReleaseBtn.addEventListener('click', async function() {
                        const formData = new FormData(createReleaseForm);
                        const editingReleaseId = modal?.dataset.editingReleaseId;

                        const data = {
                            name: formData.get('name'),
                            description: formData.get('description') || '',
                            is_prerelease: formData.get('is_prerelease') === 'on',
                            product_id: '{{ product.id }}'
                        };

                        try {
                            let response;
                            if (editingReleaseId) {
                                // Update existing release
                                response = await fetch(`/api/v1/releases/${editingReleaseId}`, {
                                    method: 'PATCH',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]')?.value || ''
                                    },
                                    body: JSON.stringify(data)
                                });
                            } else {
                                // Create new release
                                response = await fetch('/api/v1/releases', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]')?.value || ''
                                    },
                                    body: JSON.stringify(data)
                                });
                            }

                            if (response.ok) {
                                const bootstrapModal = bootstrap.Modal.getInstance(modal);
                                bootstrapModal?.hide();
                                location.reload(); // Refresh to show changes
                            } else {
                                const error = await response.json();
                                alert(`Error ${editingReleaseId ? 'updating' : 'creating'} release: ` + (error.detail || 'Unknown error'));
                            }
                        } catch (error) {
                            alert(`Error ${editingReleaseId ? 'updating' : 'creating'} release: ` + error.message);
                        }
                    });
                }

                // Reset modal when hidden
                if (modal) {
                    modal.addEventListener('hidden.bs.modal', function() {
                        const form = modal.querySelector('form');
                        const title = modal.querySelector('.modal-title');
                        if (form) form.reset();
                        if (title) title.textContent = 'Create New Release';
                        delete modal.dataset.editingReleaseId;
                    });
                }
            {% endif %}
        });
    </script>
{% endblock %}
