version: '3'

services:
  sbomify-db:
    image: postgres:15
    ports: []  # Remove exposed ports in production
    environment:
      - POSTGRES_DB=sbomify
      - POSTGRES_USER=sbomify
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  sbomify-minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports: []  # Remove exposed ports in production
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - minio_data:/data
    restart: always

  sbomify-createbuckets:
    image: minio/mc
    depends_on:
      - sbomify-minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      mc config host add minio http://sbomify-minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      mc mb --ignore-existing minio/sbomify-media;
      mc mb --ignore-existing minio/sbomify-sboms;
      mc anonymous set download minio/sbomify-media;
      exit 0;
      "
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

  sbomify-js-build:
    build:
      dockerfile: Dockerfile-frontend
    volumes:
      - js_build_output:/build-output

  sbomify-backend:
    build:
      dockerfile: Dockerfile
    depends_on:
      - sbomify-js-build
      - sbomify-db
      - sbomify-minio
      - sbomify-createbuckets
    volumes: []
    ports:
      - "8000:8000"  # Only expose the web port
    environment:
      - DATABASE_URL=postgres://sbomify:${POSTGRES_PASSWORD}@sbomify-db:5432/sbomify
      - AWS_ENDPOINT_URL_S3=http://sbomify-minio:9000
      - AWS_MEDIA_STORAGE_BUCKET_NAME=sbomify-media
      - AWS_SBOMS_STORAGE_BUCKET_NAME=sbomify-sboms
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - SOCIAL_AUTH_AUTH0_DOMAIN=${SOCIAL_AUTH_AUTH0_DOMAIN}
      - SOCIAL_AUTH_AUTH0_KEY=${SOCIAL_AUTH_AUTH0_KEY}
      - SOCIAL_AUTH_AUTH0_SECRET=${SOCIAL_AUTH_AUTH0_SECRET}
      - APP_BASE_URL=${APP_BASE_URL}
    command: poetry run gunicorn --bind :8000 --workers 2 sbomify.wsgi
    restart: always

  sbomify-migrations:
    build:
      dockerfile: Dockerfile
      target: migrations
    depends_on:
      - sbomify-db
    volumes: []  # Remove development volume mounts
    environment:
      - DATABASE_URL=postgres://sbomify:${POSTGRES_PASSWORD}@sbomify-db:5432/sbomify

volumes:
  postgres_data:
  minio_data:
  js_build_output: