---
x-common-env: &common-env
  DATABASE_USER: ${DATABASE_USER:-sbomify}
  DATABASE_PASSWORD: ${DATABASE_PASSWORD:-sbomify}
  DATABASE_NAME: ${DATABASE_NAME:-sbomify}
  DATABASE_PORT: ${DATABASE_PORT:-5432}
  DATABASE_HOST: ${DATABASE_HOST:-localhost}
  DOCKER_DATABASE_HOST: ${DOCKER_DATABASE_HOST:-sbomify-db}

x-keycloak-admin-env: &keycloak-admin-env
  KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME:-admin}
  KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}

x-keycloak-env: &keycloak-env
  KC_HOSTNAME_URL: ${KEYCLOAK_SERVER_URL:-http://keycloak:8080/}
  KEYCLOAK_SERVER_URL: ${KEYCLOAK_SERVER_URL:-http://keycloak:8080/}
  KEYCLOAK_REALM: ${KEYCLOAK_REALM:-sbomify}
  KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID:-sbomify}
  KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET:-dev-client-secret}

x-minio-env: &minio-env
  MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
  MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}

x-django-env: &django-env
  AWS_ACCESS_KEY_ID: minioadmin
  AWS_SECRET_ACCESS_KEY: minioadmin
  AWS_ENDPOINT_URL_S3: http://sbomify-minio:9000
  AWS_REGION: auto
  AWS_MEDIA_ACCESS_KEY_ID: minioadmin
  AWS_MEDIA_SECRET_ACCESS_KEY: minioadmin
  AWS_MEDIA_STORAGE_BUCKET_NAME: sbomify-media
  AWS_MEDIA_STORAGE_BUCKET_URL: http://sbomify-minio:9000/sbomify-media
  AWS_SBOMS_ACCESS_KEY_ID: minioadmin
  AWS_SBOMS_SECRET_ACCESS_KEY: minioadmin
  AWS_SBOMS_STORAGE_BUCKET_NAME: sbomify-sboms
  AWS_SBOMS_STORAGE_BUCKET_URL: http://sbomify-minio:9000/sbomify-sboms
services:
  sbomify-db:
    image: postgres:15-alpine
    restart: always
    environment:
      # We can't use anchors here, since anchors are resolved *after* these values are set.
      # You can however override all of them using a `.env` file.
      POSTGRES_USER: ${DATABASE_USER:-sbomify}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-sbomify}
      POSTGRES_DB: ${DATABASE_NAME:-sbomify}
    ports:
      - "5432:5432"
    volumes:
      - sbomify_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 2s
      retries: 10

  sbomify-minio:
    image: minio/minio:latest
    restart: always
    environment:
      <<: *keycloak-env
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - sbomify_minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 5

  sbomify-createbuckets:
    image: minio/mc
    depends_on:
      sbomify-minio:
        condition: service_healthy
    environment:
      <<: *minio-env
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://sbomify-minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb myminio/sbomify-media;
      /usr/bin/mc mb myminio/sbomify-sboms;
      /usr/bin/mc anonymous set public myminio/sbomify-media;
      exit 0;
      "
  sbomify-backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      <<: [*common-env, *django-env, *keycloak-env]
      AM_I_IN_DOCKER_CONTAINER: 1
      APP_BASE_URL: http://127.0.0.1:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      sbomify-db:
        condition: service_healthy
      sbomify-migrations:
        condition: service_completed_successfully
      sbomify-createbuckets:
        condition: service_completed_successfully
  sbomify-migrations:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      <<: [*common-env, *django-env, *keycloak-env]
      AM_I_IN_DOCKER_CONTAINER: 1
    volumes:
      - .:/code
    command: /code/bin/release.sh
    depends_on:
      sbomify-db:
        condition: service_healthy
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.4
    restart: always
    environment:
      <<: [*keycloak-env, *keycloak-admin-env]
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KC_HEALTH_ENABLED: "true"
    ports:
      - "8080:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
    command: start-dev
  keycloak-bootstrap:
    image: quay.io/keycloak/keycloak:26.1.4
    depends_on:
      - keycloak
    volumes:
      - ./bin/keycloak-bootstrap.sh:/keycloak-bootstrap.sh
    entrypoint: /bin/sh /keycloak-bootstrap.sh
    environment:
      <<: [*keycloak-env, *keycloak-admin-env]
volumes:
  sbomify_postgres_data:
  sbomify_minio_data:
  keycloak_data:
