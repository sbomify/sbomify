[tool.poetry]
name = "sbomify"
version = "0.17.2"
description = "sbomify - the security artifact hub"
authors = ["sbomify <hello@sbomify.com>"]
readme = "README.md"
homepage = "https://sbomify.com"
repository = "https://github.com/sbomify/sbomify"

[tool.poetry.dependencies]
python = "^3.10"
django = "^5.2.6"
python-dotenv = "^1.1.1"
psycopg2 = "^2.9.9"
django-extensions = "^4.1"
django-widget-tweaks = "^1.5.0"
pyjwt = "^2.10.1"
pydantic = "^2.11.9"
django-anymail = {extras = ["sendgrid"], version = "^13.1"}
whitenoise = "^6.11.0"
sentry-sdk = "^2.42.1"
django-ninja = "^1.4.5"
ruid = "^0.1.2"
boto3 = "^1.40.36"
dj-database-url = "^3.0.1"
django-vite = "^3.1.0"
django-health-check = "^3.20.0"
django-htmx = "^1.25.0"
email-validator = "^2.3.0"
stripe = "^13.0.1"
python-keycloak = "^5.8.1"
django-allauth = "^65.11.2"
dramatiq = {extras = ["redis", "watch"], version = "^1.17.1"}
django-redis = ">=5.0.0"
redis = ">=4.0.0"
tenacity = "^9.1.2"
license-expression = "^30.4.4"
pyyaml = "^6.0.2"
dramatiq-crontab = "^1.0.12"
uvicorn = {extras = ["standard"], version = "^0.38.0"}
uvicorn-worker = "^0.4.0"
gunicorn = "^23.0.0"

[tool.poetry.group.dev.dependencies]
ipython = "^8.37.0"
ruff = "^0.14.1"
bandit = "^1.8.6"
django-debug-toolbar = "^6.0.0"
pre-commit = "^4.3.0"
datamodel-code-generator = {extras = ["http"], version = "^0.35.0"}
pytest-json-report = "^1.5.0"
pytest-playwright = "^0.7.1"
djlint = "^1.36.4"

[tool.poetry.group.test.dependencies]
pytest = "^8.4.2"
pytest-django = "^4.11.1"
pytest-env = "^1.1.3"
pytest-mock = "^3.15.1"
coverage = "^7.10.7"

[tool.poetry.group.prod.dependencies]
poetry-plugin-export = "^1.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "8.0"
DJANGO_SETTINGS_MODULE = "sbomify.test_settings"

env = [
    "DJANGO_TEST_USER=testuser",
    "DJANGO_TEST_PASSWORD=test",
    "DJANGO_TEST_EMAIL=test@example.com",
    "DEFAULT_FROM_EMAIL=test@example.com",
    "SENDGRID_API_KEY=invalid-key"
]


addopts = "--nomigrations"
# -- recommended but optional:
python_files = ["tests.py", "test_*.py"]


filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:::ninja.signature.utils"
]

[tool.coverage.run]
branch = true
source = ["sbomify", "core", "access_tokens", "sboms", "teams"]
omit = [
    "*apps.py",
    "*migrations/*",
    "*settings*",
    "*/migrations/*",
    "tests.py",
    "fixtures.py",
    "*urls.py",
    "*wsgi/*",
    "manage.py",
    "conftest.py",
    "asgi.py",
    "wsgi.py",
    "sboms/sbom_format_schemas/*",
    "*/tests/*"
]

[tool.coverage.report]
omit = [
    "*apps.py",
    "*migrations/*",
    "*settings*",
    "*/migrations/*",
    "tests.py",
    "fixtures.py",
    "*urls.py",
    "*wsgi/*",
    "manage.py",
    "conftest.py",
    "asgi.py",
    "wsgi.py",
    "sboms/sbom_format_schemas/*",
    "*/tests/*"
]
fail_under = 80


[tool.bandit]
exclude_dirs = ["./.venv", "tests.py", "sbom_format_schemas", "tests", "node_modules", "test_settings.py"]
# B101 = ignore assert_used
# B404 = allow use of sub process module
# B603 = allow calls to Popen with shell=False
skips = ["B101", "B404", "B603", "B608"]


[tool.ruff]
line-length = 120
src = ["."]
exclude = ["migrations", "sbom_format_schemas", "test_settings.py", "tests", "tests.py", "conftest.py", "manage.py", "asgi.py", "wsgi.py"]

[tool.ruff.lint]
select = ["F", "E", "I", "Q", "T"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.djlint]
# Ignore inline styles rule for email templates (H021) since they're required for email client compatibility
ignore = "H021"
extension = "html.j2"
